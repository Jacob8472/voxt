#!/usr/bin/env bash
set -euo pipefail

APPDIR=/opt/voxd

# Ensure ydotool picks up our user-scoped socket (matches our user service)
export YDOTOOL_SOCKET="${YDOTOOL_SOCKET:-$HOME/.ydotool_socket}"

if [[ ${XDG_SESSION_TYPE:-} == wayland* ]] && command -v ydotool >/dev/null 2>&1; then
  # Opportunistically enable and start the user daemon (no-op if unavailable)
  systemctl --user is-active --quiet ydotoold.service || systemctl --user enable --now ydotoold.service || true
fi

if [[ -x "$APPDIR/.venv/bin/python" ]]; then
  PY="$APPDIR/.venv/bin/python"
else
  PY="$(command -v python3 || command -v python)"
fi

# Ensure Python can import the embedded source tree
export PYTHONPATH="$APPDIR/src${PYTHONPATH:+:$PYTHONPATH}"

# If the managed venv exists, prefer it entirely to guarantee deps
if [[ -x "$APPDIR/.venv/bin/python" ]]; then
  PY="$APPDIR/.venv/bin/python"
  export PYTHONPATH="$APPDIR/src${PYTHONPATH:+:$PYTHONPATH}"
fi

# First-run per-user setup if config missing
CFG_FILE="${XDG_CONFIG_HOME:-$HOME/.config}/voxd/config.yaml"
if [[ ! -f "$CFG_FILE" ]]; then
  "$PY" -m voxd --setup || true
fi

exec "$PY" -m voxd "$@"


