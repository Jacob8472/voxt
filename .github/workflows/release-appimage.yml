name: Release AppImage

on:
  workflow_dispatch:
    inputs:
      tag:
        description: "SemVer tag (existing git tag, e.g. v1.3.2)"
        required: true

jobs:
  build:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # get tags

      - name: Validate tag and set version env
        run: |
          set -e
          TAG=${{ github.event.inputs.tag }}
          if ! git tag --list | grep -qx "$TAG"; then
            echo "Tag '$TAG' not found in repository." >&2
            echo "Available tags:" >&2
            git tag --list | sed 's/^/  /' >&2
            exit 1
          fi
          echo "APP_VERSION=$TAG" >> $GITHUB_ENV

      - name: Install host deps for AppImage build
        run: |
          sudo apt update
          sudo apt install -y libfuse2 squashfs-tools desktop-file-utils zsync curl file

      - name: Download appimage-builder (AppImage)
        run: |
          set -e
          URL=$(curl -s https://api.github.com/repos/AppImageCrafters/appimage-builder/releases/latest \
            | grep -Eo 'https://[^"]+x86_64\.AppImage' | head -n1)
          echo "Using: $URL"
          curl -L "$URL" -o aib-x86_64.AppImage
          chmod +x aib-x86_64.AppImage

      - name: Build AppImage
        run: |
          ./aib-x86_64.AppImage --recipe AppImageBuilder.yml --skip-tests | cat

      - name: Verify product output
        run: |
          set -e
          ls -l VOXD-*.AppImage || (echo "No VOXD AppImage produced" >&2; exit 1)
          echo "APPIMAGE_PATH=$(ls -1 VOXD-*.AppImage | head -n1)" >> $GITHUB_ENV

      - name: Remove builder binary from workspace
        run: rm -f aib-x86_64.AppImage || true

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: VOXD-${{ env.APP_VERSION }}-x86_64
          path: |
            VOXD-*.AppImage
            VOXD-*.zsync
          if-no-files-found: error

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.event.inputs.tag }}
          name: VOXD ${{ github.event.inputs.tag }}
          draft: false
          prerelease: false
          files: |
            VOXD-*.AppImage
            VOXD-*.zsync
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
